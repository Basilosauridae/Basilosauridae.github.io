import{_ as i,o as u,c as d,a as n,b as a,w as t,e as c,d as s,r as p}from"./app.6c85ad50.js";const k={},r=c('<h2 id="_1\u3001vue\u4E2Dkey\u7684\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_1\u3001vue\u4E2Dkey\u7684\u539F\u7406" aria-hidden="true">#</a> 1\u3001Vue\u4E2Dkey\u7684\u539F\u7406</h2><p>\u5F53Vue\u66F4\u65B0\u6E32\u67D3<strong>\u771F\u5B9EDOM</strong>\u65F6\uFF0C\u5B83\u4F7F\u7528key\u5C5E\u6027\u6765 <em>\u6BD4\u8F83\u65B0\u65E7\u8282\u70B9</em>\uFF0C\u5C3D\u53EF\u80FD\u590D\u7528\u5DF2\u5B58\u5728\u7684\u771F\u5B9EDOM,\u4EE5\u63D0\u9AD8\u6027\u80FD\u3002</p><p>\u5F53Vue\u8FDB\u884C<strong>\u865A\u62DFDOM</strong>\u7684diff\u7B97\u6CD5\u65F6\uFF0C\u4F7F\u7528key <em>\u5339\u914D\u65B0\u65E7\u8282\u70B9</em>,\u786E\u5B9A\u8282\u70B9\u7684\u66F4\u65B0\u79FB\u52A8\u548C\u5220\u9664\uFF0C\u907F\u514D\u4E0D\u5FC5\u8981\u7684DOM\u64CD\u4F5C\u3002</p><p><code>key</code>\u7684\u7279\u6B8A\u5C5E\u6027\u4E3B\u8981\u7528\u4E8EVue\u7684<strong>\u865A\u62DFDOM\u7B97\u6CD5</strong>\uFF0C\u5728\u65B0\u65E7nodes\u5BF9\u6BD4\u8FA8\u8BC6 VNodes.\u82E5\u4E0D\u9002\u7528key,Vue\u4F1A\u5C1D\u8BD5\u5C31\u5730\u4FEE\u6539\u590D\u7528\u76F8\u540C\u7C7B\u578B\u5143\u7D20\u7684\u7B97\u6CD5\u3002\u800C\u4F7F\u7528key\u65F6\uFF0C\u4F1A\u57FA\u4E8Ekey\u7684\u53D8\u5316\u91CD\u65B0\u6392\u5217\u5143\u7D20\u987A\u5E8F\uFF0C\u5E76\u79FB\u9664key\u4E0D\u5B58\u5728\u7684\u5143\u7D20\u3002</p><p>\u6709\u76F8\u540C\u7236\u5143\u7D20\u7684\u5B50\u5143\u7D20\u5FC5\u987B\u6709\u72EC\u7279\u7684key,\u91CD\u590D\u7684key\u4F1A\u9020\u6210\u6E32\u67D3\u9519\u8BEF\uFF0C\u5982v-for\u3002</p><h2 id="_2-vue\u4E2D\u7684diff\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-vue\u4E2D\u7684diff\u7B97\u6CD5" aria-hidden="true">#</a> 2.Vue\u4E2D\u7684diff\u7B97\u6CD5</h2><h3 id="\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#\u662F\u4EC0\u4E48" aria-hidden="true">#</a> \u662F\u4EC0\u4E48</h3><p>\u4E00\u79CD\u901A\u8FC7\u540C\u5C42\u6811\u8282\u70B9\u8FDB\u884C\u6BD4\u8F83\u7684\u9AD8\u6548\u7B97\u6CD5\u3002\u6709\u4E24\u4E2A\u7279\u70B9\uFF1A</p><ol><li>\u53EA\u4F1A\u5728\u540C\u5C42\u6BD4\u8F83\uFF0C\u4E0D\u4F1A\u8DE8\u5C42</li><li>diff\u6BD4\u8F83\u8FC7\u7A0B\u4E2D\uFF0C\u4ECE\u4E24\u8FB9\u5411\u4E2D\u95F4\u6BD4\u8F83</li></ol><p>diff\u7B97\u6CD5\u5728\u5F88\u591A\u573A\u666F\u4E0B\u90FD\u6709\u5E94\u7528\uFF0CVue\u4E2D\uFF0C\u7528\u4E8E\u865A\u62DFDOM\u6E32\u67D3\u6210\u771F\u5B9EDOM\u7684\u65B0\u65E7<code>VNode</code>\uFF08virtual Node \u865A\u62DF\u8282\u70B9\uFF09\u6BD4\u8F83</p><h3 id="\u6BD4\u8F83\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u6BD4\u8F83\u65B9\u5F0F" aria-hidden="true">#</a> \u6BD4\u8F83\u65B9\u5F0F</h3>',11),v={href:"https://wanglin2.github.io/VNode_visualization_demo/",target:"_blank",rel:"noopener noreferrer"},m=s("diff\u7B97\u6CD5\u52A8\u753B\u6F14\u793A"),b=c(`<h3 id="\u539F\u7406\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406\u5206\u6790" aria-hidden="true">#</a> \u539F\u7406\u5206\u6790</h3><blockquote><p>\u51E0\u4E2A\u5173\u952E\u51FD\u6570\uFF1Apatch\uFF0CisSameVnode\uFF0CpatchVode\uFF0CupdateChildren</p></blockquote><ol><li><p>\u5F53\u6570\u636E\u53D1\u751F\u6539\u53D8\u65F6\uFF0C\u8BA2\u9605\u8005 watcher \u4F1A\u8C03\u7528 patch\u51FD\u6570 \u7ED9\u771F\u5B9EDOM\u6253\u8865\u4E01\uFF0C\u66F4\u65B0\u89C6\u56FE</p><p>\u6E90\u7801\u8DEF\u5F84<code>src/core/vdom/patch.js</code>\uFF1A</p><details class="custom-container details"><summary class="custom-container-title">DETAILS</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">patch</span><span class="token punctuation">(</span><span class="token parameter">oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> hydrating<span class="token punctuation">,</span> removeOnly</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 <span class="token comment">//1.\u6CA1\u6709\u65B0\u8282\u70B9\uFF0C\u76F4\u63A5\u6267\u884Cdestroy\u94A9\u5B50\u51FD\u6570</span>
 <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isDel</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">invokeDestroyHook</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span>
   <span class="token keyword">return</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">let</span> isInitialPatch <span class="token operator">=</span> <span class="token boolean">false</span>
 <span class="token keyword">const</span> insertedVnodeQueue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 <span class="token comment">//2.\u6CA1\u6709\u65E7\u8282\u70B9\uFF0C\u76F4\u63A5\u7528\u65B0\u8282\u70B9\u751F\u6210dom\u5143\u7D20</span>
 isInitialPatch <span class="token operator">=</span> <span class="token boolean">true</span>
 <span class="token function">createElm</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span> 
<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
 <span class="token keyword">const</span> isRealElement <span class="token operator">=</span> <span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span>
 <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isRealElement<span class="token operator">&amp;&amp;</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token comment">//3.\u5224\u65AD\u65E7\u8282\u70B9\u548C\u65B0\u8282\u70B9\u76F8\u540C\uFF0C\u4E00\u81F4\u6267\u884CpatchVnode</span>
   <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> removeOnly<span class="token punctuation">)</span>
 <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
   <span class="token comment">// 4.\u65B0\u65E7\u8282\u70B9\u4E0D\u540C\uFF0C\u76F4\u63A5\u9500\u6BC1\u53CA\u65E7\u8282\u70B9\uFF0C\u6839\u636E\u65B0\u8282\u70B9\u751F\u6210dom\u5143\u7D20</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>isRealElement<span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>nodeType <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> oldVnode<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token constant">SSR_ATTR</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       oldVnode<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token constant">SSR_ATTR</span><span class="token punctuation">)</span>
       hydrating <span class="token operator">=</span> <span class="token boolean">true</span>
     <span class="token punctuation">}</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>hydrating<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hydrate</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token function">invokeInsertHook</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
         <span class="token keyword">return</span> oldVnode
       <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
     oldVnode <span class="token operator">=</span> <span class="token function">emptyNodeAt</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> vnode<span class="token punctuation">.</span>elm
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><blockquote><p>patch\u51FD\u6570\u524D\u4E24\u4E2A\u53C2\u6570\u4F4D\u4E3AoldVnode \u548C Vnode \uFF0C\u5206\u522B\u4EE3\u8868\u65B0\u7684\u8282\u70B9\u548C\u4E4B\u524D\u7684\u65E7\u8282\u70B9\uFF0C\u4E3B\u8981\u505A\u4E864\u4E2A\u5224\u65AD\uFF1A</p></blockquote><ol><li>\u6CA1\u6709\u65B0\u8282\u70B9\uFF0C\u76F4\u63A5\u89E6\u53D1\u65E7\u8282\u70B9\u7684destory\u94A9\u5B50</li><li>\u6CA1\u6709\u65E7\u8282\u70B9\uFF0C\u8BF4\u660E\u662F\u9875\u9762\u521A\u5F00\u59CB\u521D\u59CB\u5316\u7684\u65F6\u5019\uFF0C\u6B64\u65F6\uFF0C\u6839\u672C\u4E0D\u9700\u8981\u6BD4\u8F83\u4E86\uFF0C\u76F4\u63A5\u5168\u662F\u65B0\u5EFA\uFF0C\u6240\u4EE5\u53EA\u8C03\u7528 createElm</li><li>\u65E7\u8282\u70B9\u548C\u65B0\u8282\u70B9\u81EA\u8EAB\u4E00\u6837\uFF0C\u901A\u8FC7 sameVnode \u5224\u65AD\u8282\u70B9\u662F\u5426\u4E00\u6837\uFF0C\u4E00\u6837\u65F6\uFF0C\u76F4\u63A5\u8C03\u7528 patchVnode \u53BB\u5904\u7406\u8FD9\u4E24\u4E2A\u8282\u70B9</li><li>\u65E7\u8282\u70B9\u548C\u65B0\u8282\u70B9\u81EA\u8EAB\u4E0D\u4E00\u6837\uFF0C\u5F53\u4E24\u4E2A\u8282\u70B9\u4E0D\u4E00\u6837\u7684\u65F6\u5019\uFF0C\u76F4\u63A5\u521B\u5EFA\u65B0\u8282\u70B9\uFF0C\u5220\u9664\u65E7\u8282\u70B9</li></ol></li><li><p>\u901A\u8FC7<code>isSameVnode</code>\u8FDB\u884C\u65B0\u65E7\u8282\u70B9\u5224\u65AD\uFF0C\u76F8\u540C\u5219\u8C03\u7528<code>patchVnode</code>\u65B9\u6CD5</p><details class="custom-container details"><summary class="custom-container-title">DETAILS</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">function</span> <span class="token function">patchVnode</span> <span class="token punctuation">(</span><span class="token parameter">oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> removeOnly</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u5982\u679C\u65B0\u65E7\u8282\u70B9\u4E00\u81F4\uFF0C\u4EC0\u4E48\u90FD\u4E0D\u505A</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode <span class="token operator">===</span> vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span>
   <span class="token punctuation">}</span>

   <span class="token comment">// \u8BA9vnode.el\u5F15\u7528\u5230\u73B0\u5728\u7684\u771F\u5B9Edom\uFF0C\u5F53el\u4FEE\u6539\u65F6\uFF0Cvnode.el\u4F1A\u540C\u6B65\u53D8\u5316</span>
   <span class="token keyword">const</span> elm <span class="token operator">=</span> vnode<span class="token punctuation">.</span>elm <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>elm

   <span class="token comment">// \u5F02\u6B65\u5360\u4F4D\u7B26</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>isAsyncPlaceholder<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>asyncFactory<span class="token punctuation">.</span>resolved<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token function">hydrate</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span>
     <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
       vnode<span class="token punctuation">.</span>isAsyncPlaceholder <span class="token operator">=</span> <span class="token boolean">true</span>
     <span class="token punctuation">}</span>
     <span class="token keyword">return</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// \u5982\u679C\u65B0\u65E7\u90FD\u662F\u9759\u6001\u8282\u70B9\uFF0C\u5E76\u4E14\u5177\u6709\u76F8\u540C\u7684key</span>
   <span class="token comment">// \u5F53vnode\u662F\u514B\u9686\u8282\u70B9\u6216\u662Fv-once\u6307\u4EE4\u63A7\u5236\u7684\u8282\u70B9\u65F6\uFF0C\u53EA\u9700\u8981\u628AoldVnode.elm\u548ColdVnode.child\u90FD\u590D\u5236\u5230vnode\u4E0A</span>
   <span class="token comment">// \u4E5F\u4E0D\u7528\u518D\u6709\u5176\u4ED6\u64CD\u4F5C</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>isStatic<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
     <span class="token function">isTrue</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>isStatic<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
     vnode<span class="token punctuation">.</span>key <span class="token operator">===</span> oldVnode<span class="token punctuation">.</span>key <span class="token operator">&amp;&amp;</span>
     <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>isCloned<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isTrue</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>isOnce<span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token punctuation">)</span> <span class="token punctuation">{</span>
     vnode<span class="token punctuation">.</span>componentInstance <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>componentInstance
     <span class="token keyword">return</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">let</span> i
   <span class="token keyword">const</span> data <span class="token operator">=</span> vnode<span class="token punctuation">.</span>data
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> data<span class="token punctuation">.</span>hook<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>prepatch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token function">i</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">const</span> oldCh <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>children
   <span class="token keyword">const</span> ch <span class="token operator">=</span> vnode<span class="token punctuation">.</span>children
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isPatchable</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cbs<span class="token punctuation">.</span>update<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> cbs<span class="token punctuation">.</span>update<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> data<span class="token punctuation">.</span>hook<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>update<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">i</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// \u5982\u679Cvnode\u4E0D\u662F\u6587\u672C\u8282\u70B9\u6216\u8005\u6CE8\u91CA\u8282\u70B9</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// \u5E76\u4E14\u90FD\u6709\u5B50\u8282\u70B9</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token comment">// \u5E76\u4E14\u5B50\u8282\u70B9\u4E0D\u5B8C\u5168\u4E00\u81F4\uFF0C\u5219\u8C03\u7528updateChildren</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCh <span class="token operator">!==</span> ch<span class="token punctuation">)</span> <span class="token function">updateChildren</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> ch<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> removeOnly<span class="token punctuation">)</span>

       <span class="token comment">// \u5982\u679C\u53EA\u6709\u65B0\u7684vnode\u6709\u5B50\u8282\u70B9</span>
     <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
       <span class="token comment">// elm\u5DF2\u7ECF\u5F15\u7528\u4E86\u8001\u7684dom\u8282\u70B9\uFF0C\u5728\u8001\u7684dom\u8282\u70B9\u4E0A\u6DFB\u52A0\u5B50\u8282\u70B9</span>
       <span class="token function">addVnodes</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> ch<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> ch<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span>

       <span class="token comment">// \u5982\u679C\u65B0vnode\u6CA1\u6709\u5B50\u8282\u70B9\uFF0C\u800Cvnode\u6709\u5B50\u8282\u70B9\uFF0C\u76F4\u63A5\u5220\u9664\u8001\u7684oldCh</span>
     <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token function">removeVnodes</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> oldCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>

       <span class="token comment">// \u5982\u679C\u8001\u8282\u70B9\u662F\u6587\u672C\u8282\u70B9</span>
     <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
     <span class="token punctuation">}</span>

     <span class="token comment">// \u5982\u679C\u65B0vnode\u548C\u8001vnode\u662F\u6587\u672C\u8282\u70B9\u6216\u6CE8\u91CA\u8282\u70B9</span>
     <span class="token comment">// \u4F46\u662Fvnode.text != oldVnode.text\u65F6\uFF0C\u53EA\u9700\u8981\u66F4\u65B0vnode.elm\u7684\u6587\u672C\u5185\u5BB9\u5C31\u53EF\u4EE5</span>
   <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>text <span class="token operator">!==</span> vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> data<span class="token punctuation">.</span>hook<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>postpatch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">i</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span>
   <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><blockquote><p>patchVnode\u4E3B\u8981\u505A\u4E865\u4E2A\u5224\u65AD\uFF1A</p></blockquote><ol><li>\u627E\u5230\u5BF9\u5E94\u7684\u771F\u5B9Edom\uFF0C\u79F0\u4E3Ael</li><li>\u5982\u679C\u90FD\u6709\u90FD\u6709\u6587\u672C\u8282\u70B9\u4E14\u4E0D\u76F8\u7B49\uFF0C\u5C06el\u6587\u672C\u8282\u70B9\u8BBE\u7F6E\u4E3AVnode\u7684\u6587\u672C\u8282\u70B9</li><li>\u5982\u679ColdVnode\u6709\u5B50\u8282\u70B9\u800CVNode\u6CA1\u6709\uFF0C\u5219\u5220\u9664el\u5B50\u8282\u70B9</li><li>\u5982\u679ColdVnode\u6CA1\u6709\u5B50\u8282\u70B9\u800CVNode\u6709\uFF0C\u5219\u5C06VNode\u7684\u5B50\u8282\u70B9\u771F\u5B9E\u5316\u540E\u6DFB\u52A0\u5230el</li><li>\u5982\u679C\u4E24\u8005\u90FD\u6709\u5B50\u8282\u70B9\uFF0C\u5219\u6267\u884CupdateChildren\u51FD\u6570\u6BD4\u8F83\u5B50\u8282\u70B9</li></ol></li><li><p>updateChildren\u65B9\u6CD5</p><details class="custom-container details"><summary class="custom-container-title">DETAILS</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">updateChildren</span> <span class="token punctuation">(</span><span class="token parameter">parentElm<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> removeOnly</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">let</span> oldStartIdx <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// \u65E7\u5934\u7D22\u5F15</span>
 <span class="token keyword">let</span> newStartIdx <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// \u65B0\u5934\u7D22\u5F15</span>
 <span class="token keyword">let</span> oldEndIdx <span class="token operator">=</span> oldCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token comment">// \u65E7\u5C3E\u7D22\u5F15</span>
 <span class="token keyword">let</span> newEndIdx <span class="token operator">=</span> newCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token comment">// \u65B0\u5C3E\u7D22\u5F15</span>
 <span class="token keyword">let</span> oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment">// oldVnode\u7684\u7B2C\u4E00\u4E2Achild</span>
 <span class="token keyword">let</span> oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>oldEndIdx<span class="token punctuation">]</span> <span class="token comment">// oldVnode\u7684\u6700\u540E\u4E00\u4E2Achild</span>
 <span class="token keyword">let</span> newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment">// newVnode\u7684\u7B2C\u4E00\u4E2Achild</span>
 <span class="token keyword">let</span> newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span>newEndIdx<span class="token punctuation">]</span> <span class="token comment">// newVnode\u7684\u6700\u540E\u4E00\u4E2Achild</span>
 <span class="token keyword">let</span> oldKeyToIdx<span class="token punctuation">,</span> idxInOld<span class="token punctuation">,</span> vnodeToMove<span class="token punctuation">,</span> refElm

 <span class="token comment">// removeOnly is a special flag used only by &lt;transition-group&gt;</span>
 <span class="token comment">// to ensure removed elements stay in correct relative positions</span>
 <span class="token comment">// during leaving transitions</span>
 <span class="token keyword">const</span> canMove <span class="token operator">=</span> <span class="token operator">!</span>removeOnly

 <span class="token comment">// \u5982\u679ColdStartVnode\u548ColdEndVnode\u91CD\u5408\uFF0C\u5E76\u4E14\u65B0\u7684\u4E5F\u90FD\u91CD\u5408\u4E86\uFF0C\u8BC1\u660Ediff\u5B8C\u4E86\uFF0C\u5FAA\u73AF\u7ED3\u675F</span>
 <span class="token keyword">while</span> <span class="token punctuation">(</span>oldStartIdx <span class="token operator">&lt;=</span> oldEndIdx <span class="token operator">&amp;&amp;</span> newStartIdx <span class="token operator">&lt;=</span> newEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u5982\u679ColdVnode\u7684\u7B2C\u4E00\u4E2Achild\u4E0D\u5B58\u5728</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// oldStart\u7D22\u5F15\u53F3\u79FB</span>
     oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span> <span class="token comment">// Vnode has been moved left</span>

   <span class="token comment">// \u5982\u679ColdVnode\u7684\u6700\u540E\u4E00\u4E2Achild\u4E0D\u5B58\u5728</span>
   <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// oldEnd\u7D22\u5F15\u5DE6\u79FB</span>
     oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span>

   <span class="token comment">// oldStartVnode\u548CnewStartVnode\u662F\u540C\u4E00\u4E2A\u8282\u70B9</span>
   <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// patch oldStartVnode\u548CnewStartVnode\uFF0C \u7D22\u5F15\u5DE6\u79FB\uFF0C\u7EE7\u7EED\u5FAA\u73AF</span>
     <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span>
     oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span>
     newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span>

   <span class="token comment">// oldEndVnode\u548CnewEndVnode\u662F\u540C\u4E00\u4E2A\u8282\u70B9</span>
   <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// patch oldEndVnode\u548CnewEndVnode\uFF0C\u7D22\u5F15\u53F3\u79FB\uFF0C\u7EE7\u7EED\u5FAA\u73AF</span>
     <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span>
     oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span>
     newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">--</span>newEndIdx<span class="token punctuation">]</span>

   <span class="token comment">// oldStartVnode\u548CnewEndVnode\u662F\u540C\u4E00\u4E2A\u8282\u70B9</span>
   <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Vnode moved right</span>
     <span class="token comment">// patch oldStartVnode\u548CnewEndVnode</span>
     <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span>
     <span class="token comment">// \u5982\u679CremoveOnly\u662Ffalse\uFF0C\u5219\u5C06oldStartVnode.eml\u79FB\u52A8\u5230oldEndVnode.elm\u4E4B\u540E</span>
     canMove <span class="token operator">&amp;&amp;</span> nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> nodeOps<span class="token punctuation">.</span><span class="token function">nextSibling</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">)</span>
     <span class="token comment">// oldStart\u7D22\u5F15\u53F3\u79FB\uFF0CnewEnd\u7D22\u5F15\u5DE6\u79FB</span>
     oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span>
     newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">--</span>newEndIdx<span class="token punctuation">]</span>

   <span class="token comment">// \u5982\u679ColdEndVnode\u548CnewStartVnode\u662F\u540C\u4E00\u4E2A\u8282\u70B9</span>
   <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Vnode moved left</span>
     <span class="token comment">// patch oldEndVnode\u548CnewStartVnode</span>
     <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span>
     <span class="token comment">// \u5982\u679CremoveOnly\u662Ffalse\uFF0C\u5219\u5C06oldEndVnode.elm\u79FB\u52A8\u5230oldStartVnode.elm\u4E4B\u524D</span>
     canMove <span class="token operator">&amp;&amp;</span> nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldEndVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span>
     <span class="token comment">// oldEnd\u7D22\u5F15\u5DE6\u79FB\uFF0CnewStart\u7D22\u5F15\u53F3\u79FB</span>
     oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span>
     newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span>

   <span class="token comment">// \u5982\u679C\u90FD\u4E0D\u5339\u914D</span>
   <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldKeyToIdx<span class="token punctuation">)</span><span class="token punctuation">)</span> oldKeyToIdx <span class="token operator">=</span> <span class="token function">createKeyToOldIdx</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">,</span> oldStartIdx<span class="token punctuation">,</span> oldEndIdx<span class="token punctuation">)</span>

     <span class="token comment">// \u5C1D\u8BD5\u5728oldChildren\u4E2D\u5BFB\u627E\u548CnewStartVnode\u7684\u5177\u6709\u76F8\u540C\u7684key\u7684Vnode</span>
     idxInOld <span class="token operator">=</span> <span class="token function">isDef</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
       <span class="token operator">?</span> oldKeyToIdx<span class="token punctuation">[</span>newStartVnode<span class="token punctuation">.</span>key<span class="token punctuation">]</span>
       <span class="token operator">:</span> <span class="token function">findIdxInOld</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> oldStartIdx<span class="token punctuation">,</span> oldEndIdx<span class="token punctuation">)</span>

     <span class="token comment">// \u5982\u679C\u672A\u627E\u5230\uFF0C\u8BF4\u660EnewStartVnode\u662F\u4E00\u4E2A\u65B0\u7684\u8282\u70B9</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>idxInOld<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// New element</span>
       <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u65B0Vnode</span>
       <span class="token function">createElm</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> parentElm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span>

     <span class="token comment">// \u5982\u679C\u627E\u5230\u4E86\u548CnewStartVnodej\u5177\u6709\u76F8\u540C\u7684key\u7684Vnode\uFF0C\u53EBvnodeToMove</span>
     <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
       vnodeToMove <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span>
       <span class="token comment">/* istanbul ignore if */</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>vnodeToMove<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token function">warn</span><span class="token punctuation">(</span>
           <span class="token string">&#39;It seems there are duplicate keys that is causing an update error. &#39;</span> <span class="token operator">+</span>
           <span class="token string">&#39;Make sure each v-for item has a unique key.&#39;</span>
         <span class="token punctuation">)</span>
       <span class="token punctuation">}</span>

       <span class="token comment">// \u6BD4\u8F83\u4E24\u4E2A\u5177\u6709\u76F8\u540C\u7684key\u7684\u65B0\u8282\u70B9\u662F\u5426\u662F\u540C\u4E00\u4E2A\u8282\u70B9</span>
       <span class="token comment">//\u4E0D\u8BBEkey\uFF0CnewCh\u548ColdCh\u53EA\u4F1A\u8FDB\u884C\u5934\u5C3E\u4E24\u7AEF\u7684\u76F8\u4E92\u6BD4\u8F83\uFF0C\u8BBEkey\u540E\uFF0C\u9664\u4E86\u5934\u5C3E\u4E24\u7AEF\u7684\u6BD4\u8F83\u5916\uFF0C\u8FD8\u4F1A\u4ECE\u7528key\u751F\u6210\u7684\u5BF9\u8C61oldKeyToIdx\u4E2D\u67E5\u627E\u5339\u914D\u7684\u8282\u70B9\uFF0C\u6240\u4EE5\u4E3A\u8282\u70B9\u8BBE\u7F6Ekey\u53EF\u4EE5\u66F4\u9AD8\u6548\u7684\u5229\u7528dom\u3002</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>vnodeToMove<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// patch vnodeToMove\u548CnewStartVnode</span>
         <span class="token function">patchVnode</span><span class="token punctuation">(</span>vnodeToMove<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span>
         <span class="token comment">// \u6E05\u9664</span>
         oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">undefined</span>
         <span class="token comment">// \u5982\u679CremoveOnly\u662Ffalse\uFF0C\u5219\u5C06\u627E\u5230\u7684\u548CnewStartVnodej\u5177\u6709\u76F8\u540C\u7684key\u7684Vnode\uFF0C\u53EBvnodeToMove.elm</span>
         <span class="token comment">// \u79FB\u52A8\u5230oldStartVnode.elm\u4E4B\u524D</span>
         canMove <span class="token operator">&amp;&amp;</span> nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> vnodeToMove<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span>

       <span class="token comment">// \u5982\u679Ckey\u76F8\u540C\uFF0C\u4F46\u662F\u8282\u70B9\u4E0D\u76F8\u540C\uFF0C\u5219\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u8282\u70B9</span>
       <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
         <span class="token comment">// same key but different element. treat as new element</span>
         <span class="token function">createElm</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> parentElm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span>
       <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
     <span class="token comment">// \u53F3\u79FB</span>
     newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span>
   <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><blockquote><p>updateChildren\u4E3B\u8981\u505A\u4E862\u4E2A\u64CD\u4F5C\uFF1A</p></blockquote><ol><li>\u8BBE\u7F6E\u65B0\u65E7VNode\u7684\u5934\u5C3E\u6307\u9488</li><li>\u65B0\u65E7\u5934\u5C3E\u6307\u9488\u6BD4\u8F83\uFF0C\u5FAA\u73AF\u5411\u4E2D\u95F4\u9760\u62E2\uFF0C\u6839\u636E\u60C5\u51B5\u8C03\u7528patchVnode\u8FDB\u884Cpatch\u91CD\u590D\u6D41\u7A0B\uFF0C\u8C03\u7528createElem\u521B\u5EFA\u4E00\u4E2A\u65B0\u8282\u70B9\uFF0C\u4ECE\u54C8\u5E0C\u8868\u5BFB\u627E key \u4E00\u81F4\u7684VNode\u8282\u70B9\u5206\u60C5\u51B5\u64CD\u4F5C</li></ol></li></ol><h2 id="_3-vue\u6A21\u677F\u5982\u4F55\u7F16\u8BD1" tabindex="-1"><a class="header-anchor" href="#_3-vue\u6A21\u677F\u5982\u4F55\u7F16\u8BD1" aria-hidden="true">#</a> 3.Vue\u6A21\u677F\u5982\u4F55\u7F16\u8BD1</h2><blockquote><p>new Vue({render:h=&gt;h(App)}),\u8C03\u7528render\u4F20\u5165 .vue\u6587\u4EF6\u4F1A\u5F97\u5230\u5BF9\u5E94\u7684\u865A\u62DFDOM.\u63A2\u8BA8\u5982\u4F55\u628A.vue\u6587\u4EF6\u8F6C\u5316\u4E3A\u6D4F\u89C8\u5668\u53EF\u8BC6\u522B\u7684\u4EE3\u7801\u8FC7\u7A0B\u3002</p></blockquote><p>render\u51FD\u6570\u7684\u4E24\u79CD\u65B9\u5F0F\uFF1A</p><ul><li>\u7ECF\u8FC7\u6A21\u677F\u7F16\u8BD1\u751F\u6210render\u51FD\u6570</li><li>\u7EC4\u4EF6\u4E2D\u81EA\u5B9A\u4E49\u4E86render\u51FD\u6570\uFF0C\u4F1A\u81EA\u52A8\u8DF3\u8FC7\u6A21\u677F\u7F16\u8BD1\u7684\u8FC7\u7A0B</li></ul><h3 id="\u6A21\u677F\u7F16\u8BD1\u7684\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u6A21\u677F\u7F16\u8BD1\u7684\u8FC7\u7A0B" aria-hidden="true">#</a> \u6A21\u677F\u7F16\u8BD1\u7684\u8FC7\u7A0B</h3><p><code>&lt;template&gt;&lt;/template&gt;</code>\u662F\u6A21\u677F\uFF0C\u4E0D\u662F\u771F\u5B9E\u7684HTML\uFF0C\u6D4F\u89C8\u5668\u65E0\u6CD5\u8BC6\u522B\u3002\u5C06\u6A21\u677F\u751F\u6210\u539F\u751FHTML\u7684\u6D41\u7A0B\uFF1A</p><ol><li>\u63D0\u53D6\u51FA\u539F\u751F\u7684HTML\u548C\u975E\u539F\u751F\u7684HTML\uFF0C\u5982\u7ED1\u5B9A\u7684\u5C5E\u6027\u3001\u4E8B\u4EF6\u3001\u6307\u4EE4\u7B49</li><li>\u7ECF\u8FC7\u4E00\u4E9B\u5904\u7406\u751F\u6210render\u51FD\u6570</li><li>render\u51FD\u6570\u5C06\u6A21\u677F\u5185\u5BB9\u751F\u6210\u5BF9\u5E94\u7684vnode</li><li>\u7ECF\u8FC7patch\u8FC7\u7A0B\uFF08Diff\uFF09\u5F97\u5230\u8981\u6E32\u67D3\u5230\u89C6\u56FE\u7684vnode</li><li>\u6839\u636Evnode\u521B\u5EFA\u771F\u5B9E\u7684DOM\u8282\u70B9\uFF0C\u539F\u751FHTML\u63D2\u5165\u5230\u89C6\u56FE\u4E2D\uFF0C\u5B8C\u6210\u6E32\u67D3</li></ol><p>\u4EE5\u4E0A1-3\u662FVue\u6A21\u677F\u7F16\u8BD1\u7684\u8FC7\u7A0B\u3002</p><h3 id="\u6A21\u677F\u7F16\u8BD1\u7684\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#\u6A21\u677F\u7F16\u8BD1\u7684\u6E90\u7801" aria-hidden="true">#</a> \u6A21\u677F\u7F16\u8BD1\u7684\u6E90\u7801</h3><h4 id="\u5165\u53E3\u51FD\u6570-basecompile" tabindex="-1"><a class="header-anchor" href="#\u5165\u53E3\u51FD\u6570-basecompile" aria-hidden="true">#</a> \u5165\u53E3\u51FD\u6570 baseCompile</h4><p><code>src/complier/index.js - 11\u884C</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> createCompiler <span class="token operator">=</span> <span class="token function">createCompilerCreator</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">baseCompile</span> <span class="token punctuation">(</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token comment">// \u5C31\u662F\u8981\u8F6C\u6362\u7684\u6A21\u677F\u5B57\u7B26\u4E32</span>
  <span class="token literal-property property">options</span><span class="token operator">:</span> CompilerOptions <span class="token comment">//\u5C31\u662F\u8F6C\u6362\u65F6\u9700\u8981\u7684\u53C2\u6570</span>
<span class="token punctuation">)</span><span class="token operator">:</span> CompiledResult <span class="token punctuation">{</span>
  <span class="token comment">// 1. \u8FDB\u884C\u6A21\u677F\u89E3\u6790\uFF0C\u5E76\u5C06\u7ED3\u679C\u4FDD\u5B58\u4E3A AST\uFF08\u62BD\u8C61\u8BED\u6CD5\u6811\uFF09</span>
  <span class="token keyword">const</span> ast <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>
  
  <span class="token comment">// \u6CA1\u6709\u7981\u7528\u9759\u6001\u4F18\u5316\u7684\u8BDD</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>optimize <span class="token operator">!==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 2. \u5C31\u904D\u5386 AST\uFF0C\u5E76\u627E\u51FA\u9759\u6001\u8282\u70B9\u5E76\u6807\u8BB0</span>
    <span class="token function">optimize</span><span class="token punctuation">(</span>ast<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 3. \u6839\u636E AST \u751F\u6210\u6E32\u67D3\u51FD\u6570</span>
  <span class="token keyword">const</span> code <span class="token operator">=</span> <span class="token function">generate</span><span class="token punctuation">(</span>ast<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    ast<span class="token punctuation">,</span>
    <span class="token literal-property property">render</span><span class="token operator">:</span> code<span class="token punctuation">.</span>render<span class="token punctuation">,</span> <span class="token comment">// \u8FD4\u56DE\u6E32\u67D3\u51FD\u6570 render</span>
    <span class="token literal-property property">staticRenderFns</span><span class="token operator">:</span> code<span class="token punctuation">.</span>staticRenderFns
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="basecompile\u4E2D\u7684parse\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#basecompile\u4E2D\u7684parse\u51FD\u6570" aria-hidden="true">#</a> baseCompile\u4E2D\u7684parse\u51FD\u6570</h4><p><code>src/complier/parser/index.js - 79\u884C</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">parse</span> <span class="token punctuation">(</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token comment">// \u8981\u8F6C\u6362\u7684\u6A21\u677F\u5B57\u7B26\u4E32</span>
  <span class="token literal-property property">options</span><span class="token operator">:</span> CompilerOptions <span class="token comment">// \u8F6C\u6362\u65F6\u9700\u8981\u7684\u53C2\u6570</span>
<span class="token punctuation">)</span><span class="token operator">:</span> ASTElement <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token function">parseHTML</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    warn<span class="token punctuation">,</span>
    <span class="token literal-property property">expectHTML</span><span class="token operator">:</span> options<span class="token punctuation">.</span>expectHTML<span class="token punctuation">,</span>
    <span class="token literal-property property">isUnaryTag</span><span class="token operator">:</span> options<span class="token punctuation">.</span>isUnaryTag<span class="token punctuation">,</span>
    <span class="token literal-property property">canBeLeftOpenTag</span><span class="token operator">:</span> options<span class="token punctuation">.</span>canBeLeftOpenTag<span class="token punctuation">,</span>
    <span class="token literal-property property">shouldDecodeNewlines</span><span class="token operator">:</span> options<span class="token punctuation">.</span>shouldDecodeNewlines<span class="token punctuation">,</span>
    <span class="token literal-property property">shouldDecodeNewlinesForHref</span><span class="token operator">:</span> options<span class="token punctuation">.</span>shouldDecodeNewlinesForHref<span class="token punctuation">,</span>
    <span class="token literal-property property">shouldKeepComment</span><span class="token operator">:</span> options<span class="token punctuation">.</span>comments<span class="token punctuation">,</span>
    <span class="token literal-property property">outputSourceRange</span><span class="token operator">:</span> options<span class="token punctuation">.</span>outputSourceRange<span class="token punctuation">,</span>
    <span class="token comment">// \u89E3\u6790\u5230\u5F00\u59CB\u6807\u7B7E\u65F6\u8C03\u7528\uFF0C\u5982 &lt;div&gt;</span>
    <span class="token function">start</span> <span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> unary<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// unary \u662F\u5426\u662F\u81EA\u95ED\u5408\u6807\u7B7E\uFF0C\u5982 &lt;img /&gt;</span>
        <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u89E3\u6790\u5230\u7ED3\u675F\u6807\u7B7E\u65F6\u8C03\u7528\uFF0C\u5982 &lt;/div&gt;</span>
    <span class="token function">end</span> <span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u89E3\u6790\u5230\u6587\u672C\u65F6\u8C03\u7528</span>
    <span class="token function">chars</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">text</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">start</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">end</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FD9\u91CC\u4F1A\u5224\u65AD\u5224\u65AD\u5F88\u591A\u4E1C\u897F\uFF0C\u6765\u770B\u5B83\u662F\u4E0D\u662F\u5E26\u53D8\u91CF\u7684\u52A8\u6001\u6587\u672C</span>
      <span class="token comment">// \u7136\u540E\u521B\u5EFA\u52A8\u6001\u6587\u672C\u6216\u9759\u6001\u6587\u672C\u5BF9\u5E94\u7684 AST \u8282\u70B9</span>
      <span class="token operator">...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u89E3\u6790\u5230\u6CE8\u91CA\u65F6\u8C03\u7528</span>
    <span class="token function">comment</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">text</span><span class="token operator">:</span> string<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6CE8\u91CA\u662F\u8FD9\u4E48\u627E\u7684</span>
      <span class="token keyword">const</span> comment <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^&lt;!\\--</span><span class="token regex-delimiter">/</span></span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>comment<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u662F\u6CE8\u91CA\uFF0C\u5C31\u7EE7\u7EED\u627E &#39;--&gt;&#39;</span>
      <span class="token keyword">const</span> commentEnd <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;--&gt;&#39;</span><span class="token punctuation">)</span>
      <span class="token operator">...</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// \u8FD4\u56DE\u7684\u8FD9\u4E2A\u5C31\u662F AST</span>
  <span class="token keyword">return</span> root
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="basecompile\u4E2D\u7684optimize\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#basecompile\u4E2D\u7684optimize\u51FD\u6570" aria-hidden="true">#</a> baseCompile\u4E2D\u7684optimize\u51FD\u6570</h4><p><code>src/complier/optimizer.js - 21\u884C</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">optimize</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token operator">?</span>ASTElement<span class="token punctuation">,</span> <span class="token literal-property property">options</span><span class="token operator">:</span> CompilerOptions</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token keyword">return</span>
  isStaticKey <span class="token operator">=</span> <span class="token function">genStaticKeysCached</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>staticKeys <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  isPlatformReservedTag <span class="token operator">=</span> options<span class="token punctuation">.</span>isReservedTag <span class="token operator">||</span> no
  <span class="token comment">// \u6807\u8BB0\u9759\u6001\u8282\u70B9</span>
  <span class="token function">markStatic</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span>
  <span class="token comment">// \u6807\u8BB0\u9759\u6001\u6839\u8282\u70B9</span>
  <span class="token function">markStaticRoots</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u51FD\u6570\u5728AST\u4E2D\u627E\u51FA\u9759\u6001\u8282\u70B9\u548C\u9759\u6001\u6839\u8282\u70B9\u5E76\u6DFB\u52A0\u6807\u8BB0\uFF0C\u4E3A\u540E\u9762\u7684patch\u8FC7\u7A0B\u4E2D\u5C31\u4F1A\u8DF3\u8FC7\u9759\u6001\u8282\u70B9\u7684\u5BF9\u6BD4\uFF0C\u76F4\u63A5\u514B\u9686\u4E00\u4EFD\u53BB\u8FC7\uFF0C\u4F18\u5316patch\u7684\u6027\u80FD\u3002</p><h4 id="basecompile\u4E2D\u7684generate\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#basecompile\u4E2D\u7684generate\u51FD\u6570" aria-hidden="true">#</a> baseCompile\u4E2D\u7684generate\u51FD\u6570</h4><p><code>src/complier/codegen/index.js - 43\u884C</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">generate</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">ast</span><span class="token operator">:</span> ASTElement <span class="token operator">|</span> <span class="token keyword">void</span><span class="token punctuation">,</span>
  <span class="token literal-property property">options</span><span class="token operator">:</span> CompilerOptions</span>
<span class="token punctuation">)</span><span class="token operator">:</span> CodegenResult <span class="token punctuation">{</span>
  <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CodegenState</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
  <span class="token comment">// \u5C31\u662F\u5148\u5224\u65AD AST \u662F\u4E0D\u662F\u4E3A\u7A7A\uFF0C\u4E0D\u4E3A\u7A7A\u5C31\u6839\u636E AST \u521B\u5EFA vnode\uFF0C\u5426\u5219\u5C31\u521B\u5EFA\u4E00\u4E2A\u7A7Adiv\u7684 vnode</span>
  <span class="token keyword">const</span> code <span class="token operator">=</span> ast <span class="token operator">?</span> <span class="token punctuation">(</span>ast<span class="token punctuation">.</span>tag <span class="token operator">===</span> <span class="token string">&#39;script&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;null&#39;</span> <span class="token operator">:</span> <span class="token function">genElement</span><span class="token punctuation">(</span>ast<span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&#39;_c(&quot;div&quot;)&#39;</span>
  
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">render</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">with(this){return </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">staticRenderFns</span><span class="token operator">:</span> state<span class="token punctuation">.</span>staticRenderFns
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u81EA\u5B9A\u4E49\u7684render" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u7684render" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u7684render</h3>`,26),h=n("div",{class:"language-vue ext-vue line-numbers-mode"},[n("pre",{class:"language-vue"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("template")]),n("span",{class:"token punctuation"},">")]),s(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("h1")]),n("span",{class:"token punctuation"},">")]),s("\u6211\u662F\u5B9D\u8D1D"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("h1")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("template")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("script")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"},[n("span",{class:"token language-javascript"},[s(`
  `),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("script")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=n("div",{class:"language-vue ext-vue line-numbers-mode"},[n("pre",{class:"language-vue"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("script")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"},[n("span",{class:"token language-javascript"},[s(`
  `),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"render"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"h"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"h"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'h1'"),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'\u6211\u662F\u5B9D\u8D1D'"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("script")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"render"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"h"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"h"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'h1'"),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'\u6211\u662F\u5B9D\u8D1D'"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=n("p",null,"\u4EE5\u4E0A\u4E09\u79CD\u5199\u6CD5\u6E32\u67D3\u51FA\u7684\u6548\u679C\u76F8\u540C\uFF0C\u81EA\u5DF1\u5199\u7684\u4F18\u5148\u7EA7\u4F4E\u4E8Erender\u51FD\u6570\u6E32\u67D3\u7684\uFF0C\u81EA\u5DF1\u5199\u7684\u6A21\u677F\u4E0D\u9700\u8981\u518D\u53BB\u89E3\u6790\uFF0C\u6027\u80FD\u4E0A\u4F1A\u6709\u63D0\u5347\u3002\u4F46\u6709\u4E9B\u573A\u666F\u9700\u8981\u66F4\u7075\u6D3B\u7684\u5199\u6CD5\uFF1A",-1),w=n("div",{class:"language-vue ext-vue line-numbers-mode"},[n("pre",{class:"language-vue"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("template")]),n("span",{class:"token punctuation"},">")]),s(`
   `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("h1")]),s(),n("span",{class:"token attr-name"},"v-if"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("level === 1"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
   `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("a")]),s(),n("span",{class:"token attr-name"},"href"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("xxx"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
     `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("slot")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("slot")]),n("span",{class:"token punctuation"},">")]),s(`
   `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("a")]),n("span",{class:"token punctuation"},">")]),s(`
   `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("h1")]),n("span",{class:"token punctuation"},">")]),s(`
   `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("h2")]),s(),n("span",{class:"token attr-name"},"v-else-if"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("level === 2"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
   `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("a")]),s(),n("span",{class:"token attr-name"},"href"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("xxx"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
     `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("slot")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("slot")]),n("span",{class:"token punctuation"},">")]),s(`
   `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("a")]),n("span",{class:"token punctuation"},">")]),s(`
   `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("h2")]),n("span",{class:"token punctuation"},">")]),s(`
   `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("h3")]),s(),n("span",{class:"token attr-name"},"v-else-if"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("level === 3"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
   `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("a")]),s(),n("span",{class:"token attr-name"},"href"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("xxx"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
     `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("slot")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("slot")]),n("span",{class:"token punctuation"},">")]),s(`
   `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("a")]),n("span",{class:"token punctuation"},">")]),s(`
   `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("h3")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("template")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("script")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"},[n("span",{class:"token language-javascript"},[s(`
  `),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"props"),n("span",{class:"token operator"},":"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'level'"),n("span",{class:"token punctuation"},"]"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("script")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),V=n("div",{class:"language-vue ext-vue line-numbers-mode"},[n("pre",{class:"language-vue"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("script")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token script"},[n("span",{class:"token language-javascript"},[s(`
  `),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token literal-property property"},"props"),n("span",{class:"token operator"},":"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'level'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token function"},"render"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"h"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"h"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'h'"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("level"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("$slots"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"default"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("script")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=n("h2",{id:"_4-\u4E3A\u4EC0\u4E48vue\u4E2D\u7684css-scoped\u4E0D\u4F1A\u9020\u6210\u6C61\u67D3",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_4-\u4E3A\u4EC0\u4E48vue\u4E2D\u7684css-scoped\u4E0D\u4F1A\u9020\u6210\u6C61\u67D3","aria-hidden":"true"},"#"),s(" 4.\u4E3A\u4EC0\u4E48Vue\u4E2D\u7684CSS-scoped\u4E0D\u4F1A\u9020\u6210\u6C61\u67D3")],-1);function S(E,C){const l=p("ExternalLinkIcon"),e=p("CodeGroupItem"),o=p("CodeGroup");return u(),d("div",null,[r,n("p",null,[n("a",v,[m,a(l)])]),b,a(o,null,{default:t(()=>[a(e,{title:"\u5199\u6CD5\u4E00"},{default:t(()=>[h]),_:1}),a(e,{title:"\u5199\u6CD5\u4E8C"},{default:t(()=>[f]),_:1}),a(e,{title:"\u5199\u6CD5\u4E09"},{default:t(()=>[y]),_:1})]),_:1}),g,a(o,null,{default:t(()=>[a(e,{title:"\u6709\u5F88\u591Aif\u5224\u65AD"},{default:t(()=>[w]),_:1}),a(e,{title:"render\u7B80\u5316\u5199\u6CD5"},{default:t(()=>[V]),_:1})]),_:1}),x])}var T=i(k,[["render",S],["__file","vue2principle.html.vue"]]);export{T as default};
